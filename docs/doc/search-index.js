var searchIndex = JSON.parse('{\
"agents":{"doc":"AlGlobo Agents - Process payments","t":[0,0,5,0,5,5,0,3,11,11,11,11,11,11,11,12,12,11,12,11,12,12,11,11,11,11,17,17,17,3,6,17,17,17,17,11,11,12,11,11,11,12,11,12,11,11,11,11,13,4,3,17,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,17,5,5,5,5,5,5,5,5],"n":["agent","communication","create_listener","logger","main","psycho_agent_killer","utils","Agent","abort","borrow","borrow_mut","commit","finish","from","into","logger","name","new","port","prepare","success_rate","transactions_state","try_from","try_into","type_id","vzip","ABORT","ACK","COMMIT","DataMsg","DataMsgBytes","FINISH","PAYMENT_ERR","PAYMENT_OK","PREPARE","borrow","borrow_mut","data","from","from_bytes","into","opcode","to_bytes","transaction_id","try_from","try_into","type_id","vzip","INFO","LogLevel","Logger","PREFIX_PATH","TRACE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","filename","fmt","from","from","info","into","into","log","name","new","to_owned","to_owned","trace","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AGENTS_FILE","agent_get_name","agent_get_port","agent_get_success_rate","create_empty_csv","csv_to_prices","get_agents","get_agents_ports","write_to_csv"],"q":["agents","","","","","","","agents::agent","","","","","","","","","","","","","","","","","","","agents::communication","","","","","","","","","","","","","","","","","","","","","","agents::logger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","agents::utils","","","","","","","",""],"d":["Agent Struct","Several definitions regarding the alglobo<->agents …","Constantly listens to TCP connections Handles different …","Logging functions","Main function. Starts the agents from the .yaml …","Starts the agent killer in a new thread, killing agents …","Global utils related to reading and parsing of csv and …","Agent Struct","Handles the ABORT phase, logging the transaction and …","","","Handles the COMMIT phase, logging the transaction and …","Returns ACK","","","Logger used by the agent","Name of the agent used for logging purposes","","TCP port used by the agent","Handles the PREPARE phase, simulating the transaction …","Success rate of each request sent to the agent","All transaction states handled by the agent","","","","","Transaction Message for the second phase: aborting","Message to acknowledge an operation being done","Transaction Message for the second phase: commiting","9 byte message to communicate from alglobo to the agents","The number of bytes needed in a DataMsg array","Message to stop listening for incoming connections","Message when a payment wasn’t accepted","Message when a payment was accepted","Transaction Message for the first phase: preparing","","","4 bytes for the transaction payment","","Translate a 9 byte array into a DataMsg structure","","1 byte for the transaction operation","Translate a DataMsg structure into a 9 byte array","4 bytes id of the transaction to operate on","","","","","INFO logs are printed to the console and are useful for …","Simple logging levels for our logger","Logger struct with a name and a filename","Log directory","TRACE logs refer to system initialization and nothing …","","","","","","","","","","","","","Logs an INFO message INFO messages also go through the …","","","Logs the message to the file and, if the level is INFO, …","","Creates a new logger","","","Logs a TRACE message","","","","","","","","","Agents config file","Parses a yaml name into a string","Parses a yaml port into a number","Parses a yaml rate into a float","Creates or overwrites a csv","Parses a csv into a vector of a vector of numbers","Parses an agents yaml config file into a serde-yaml …","Returns every port present on the agent config file","Writes an array of numbers as a new csv line"],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,3,0,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,4,4,4,4,3,4,4,3,4,3,4,3,4,3,0,0,0,0,0,0,0,0,0],"f":[null,null,[[["agent",3],["atomicbool",3],["arc",3,["atomicbool"]]]],null,[[]],[[["vec",3,["arc"]],["arc",3,["atomicbool"]]]],null,null,[[["u32",15]],["u8",15]],[[]],[[]],[[["u32",15]],["u8",15]],[[],["u8",15]],[[]],[[]],null,null,[[["u16",15],["f64",15],["string",3]]],null,[[["u32",15]],["u8",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[]],[[],["datamsg",3]],[[]],null,[[["datamsg",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["loglevel",4]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[["string",3]]],[[]],[[]],[[["loglevel",4],["string",3]]],null,[[["string",3]]],[[]],[[]],[[["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[["value",4]],["string",3]],[[["value",4]],["u16",15]],[[["value",4]],["f64",15]],[[["str",15]],["file",3]],[[["str",15]],[["vec",3,["vec"]],["vec",3,["u32"]]]],[[],["sequence",6]],[[],[["u16",15],["vec",3,["u16"]]]],[[["file",3]]]],"p":[[3,"Agent"],[3,"DataMsg"],[4,"LogLevel"],[3,"Logger"]]},\
"alglobo":{"doc":"AlGlobo.com - Process payments","t":[0,0,0,5,5,0,3,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,12,12,5,5,11,11,12,12,12,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,17,17,17,3,6,17,17,17,17,11,11,12,11,11,11,12,11,12,11,11,11,11,13,4,3,17,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,17,5,5,5,5,5,5,5,5],"n":["alglobo_node","communication","logger","main","psycho_node_killer","utils","AlgloboNode","MSG_ACK","MSG_COORDINATOR","MSG_ELECTION","MSG_KILL","N_NODES","TIMEOUT","am_i_leader","borrow","borrow_mut","broadcast","broadcast_last_log","clone","find_new","finish_transaction","from","get_leader_id","got_ack","id","id_to_ctrladdr","id_to_dataaddr","ids_to_msg","into","last_id","last_status","leader_id","logger","loop_node","new","next","parse_message","process_payments","responder","safe_send_next","socket","stop","stop","try_from","try_into","type_id","vzip","ABORT","ACK","COMMIT","DataMsg","DataMsgBytes","FINISH","PAYMENT_ERR","PAYMENT_OK","PREPARE","borrow","borrow_mut","data","from","from_bytes","into","opcode","to_bytes","transaction_id","try_from","try_into","type_id","vzip","INFO","LogLevel","Logger","PREFIX_PATH","TRACE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","filename","fmt","from","from","info","into","into","log","name","new","to_owned","to_owned","trace","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AGENTS_FILE","agent_get_name","agent_get_port","agent_get_success_rate","create_empty_csv","csv_to_prices","get_agents","get_agents_ports","write_to_csv"],"q":["alglobo","","","","","","alglobo::alglobo_node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alglobo::communication","","","","","","","","","","","","","","","","","","","","","","alglobo::logger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","alglobo::utils","","","","","","","",""],"d":["AlgloboNode struct","Several definitions regarding the alglobo<->agents …","Logging functions","Starts the main process, starting the node killer and …","Starts the thread designated to kill each node via …","Global utils related to reading and parsing of csv and …","AlgloboNode struct","Control message for ACKs","Control message for coordinator messages","Control message for election messages","Control message for kill messages","The amount of nodes to launch the program with","Timeout for receiving transaction information in the …","Asks itself… am I the leader? Do I exist? Is any of …","","","Broadcast a message to all agents at the same time, …","Sends the status of the last broadcast to all the …","Clone the AlgloboNode struct.","Start a new leader election sending a new MSG_ELECTION to …","Finishes the transaction acording to the results of the …","","Returns the leader id","Flag for reliable data transfer via UDP, with a lock and …","The id of the node","Socket used for receiving leader election/coordination …","Socket used for receiving transaction information from …","Returns an array of bytes representing the message from …","","Last processed id of the transaction, with a lock","Last processed id of the transaction, with a lock","The id of the leader, with a lock and a condvar","Logger of the node","Main loop function of the node. If it’s the leader it …","Creates the AlgoboNode and starts the control responder …","Get the id of next node in the ring.","Parses the array of bytes into the message, returning its …","Function used by the leader for handling the payments. It …","Control responder function. Handles receiving MSG_ACK, …","Sends the message to the next node in the ring. It waits …","The UDP socket of the node","Kills a node, due either to a manual trigger or to a …","Stop flag to end the node’s threads","","","","","Transaction Message for the second phase: aborting","Message to acknowledge an operation being done","Transaction Message for the second phase: commiting","9 byte message to communicate from alglobo to the agents","The number of bytes needed in a DataMsg array","Message to stop listening for incoming connections","Message when a payment wasn’t accepted","Message when a payment was accepted","Transaction Message for the first phase: preparing","","","4 bytes for the transaction payment","","Translate a 9 byte array into a DataMsg structure","","1 byte for the transaction operation","Translate a DataMsg structure into a 9 byte array","4 bytes id of the transaction to operate on","","","","","INFO logs are printed to the console and are useful for …","Simple logging levels for our logger","Logger struct with a name and a filename","Log directory","TRACE logs refer to system initialization and nothing …","","","","","","","","","","","","","Logs an INFO message INFO messages also go through the …","","","Logs the message to the file and, if the level is INFO, …","","Creates a new logger","","","Logs a TRACE message","","","","","","","","","Agents config file","Parses a yaml name into a string","Parses a yaml port into a number","Parses a yaml rate into a float","Creates or overwrites a csv","Parses a csv into a vector of a vector of numbers","Parses an agents yaml config file into a serde-yaml …","Returns every port present on the agent config file","Writes an array of numbers as a new csv line"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,3,0,0,0,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,4,4,4,4,3,4,4,3,4,3,4,3,4,3,0,0,0,0,0,0,0,0,0],"f":[null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,[[],["bool",15]],[[]],[[]],[[["usize",15],["u8",15],["arc",3]]],[[["usize",15],["u8",15]]],[[],["alglobonode",3]],[[]],[[["usize",15],["u8",15],["arc",3],["file",3]]],[[]],[[],["usize",15]],null,null,[[["usize",15]],["socketaddr",4]],[[["usize",15]],["socketaddr",4]],[[["u8",15]],[["vec",3,["u8"]],["u8",15]]],[[]],null,null,null,null,[[]],[[["usize",15]],["alglobonode",3]],[[["usize",15]],["usize",15]],[[]],[[]],[[]],[[["usize",15]]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],null,[[]],[[],["datamsg",3]],[[]],null,[[["datamsg",3]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["loglevel",4]],[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],[[["string",3]]],[[]],[[]],[[["loglevel",4],["string",3]]],null,[[["string",3]]],[[]],[[]],[[["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[["value",4]],["string",3]],[[["value",4]],["u16",15]],[[["value",4]],["f64",15]],[[["str",15]],["file",3]],[[["str",15]],[["vec",3,["vec"]],["vec",3,["u32"]]]],[[],["sequence",6]],[[],[["u16",15],["vec",3,["u16"]]]],[[["file",3]]]],"p":[[3,"AlgloboNode"],[3,"DataMsg"],[4,"LogLevel"],[3,"Logger"]]},\
"informe":{"doc":"Informe","t":[5],"n":["main"],"q":["informe"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};